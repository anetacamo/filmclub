{"version":3,"sources":["firebase.js","components/favouriteMovies.js","components/featured.js","components/form.js","components/input.js","components/movieDetails.js","components/search.js","components/searchResults.js","components/suggestedMovies.js","actions/index.js","components/userForm.js","reducers/isOpen.js","reducers/isLoading.js","reducers/index.js","index.js","components/App.js"],"names":["auth","initializeApp","apiKey","process","authDomain","databaseUrl","projectId","storageBucket","messagingSenderId","appId","getAuth","getFirestore","signup","email","password","createUserWithEmailAndPassword","login","signInWithEmailAndPassword","useAuth","useState","currentUser","setCurrentUser","useEffect","onAuthStateChanged","user","FavouriteMovies","moviesList","handleClick","listName","movies","sort","a","b","original_language","className","length","map","movie","key","id","onClick","title","release_date","substring","Featured","featured","icon","type","classes","console","log","aria-hidden","Form","handleDownload","handleOpen","mail","setMail","setPassword","loading","setLoading","error","setError","success","setSuccess","openInfo","setOpenInfo","Input","placeholder","value","onInputChange","e","style","marginTop","disabled","async","required","nameClass","onChange","target","MovieDetails","handleFeatured","storedMovies","original_title","find","film","like","suggested","vote_average","runtime","overview","Search","handleSelectedMovie","query","setQuery","setMovies","q","fetch","response","json","results","handleSearchChange","SearchResults","erorr","movieId","some","SuggestedMovies","Object","values","reduce","count","getMovie","backgroundColor","color","padding","marginRight","open","UserForm","saved","handleSave","isOpen","useSelector","state","dispatch","useDispatch","split","signOut","action","isLoading","allReducers","combineReducers","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","selectedMovie","setSelectedMovie","setStoredMovies","setSaved","download","setDownload","allSuggested","setAllSuggested","onFeatureChange","feature","fState","undefined","updatedMovie","simplified","newObj","simplifyMovie","updatedMovies","m","moviesWithoutSelected","filter","updateStoredMovies","localStorage","setItem","JSON","stringify","onSnapshot","collection","db","snapshot","docs","suggestedItems","allUsersData","doc","array","parse","data","item","push","uid","docRef","payload","getItem","setDoc","createUserDb","moviesFromDb","saveMoviesToDb","document","getElementById"],"mappings":"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","file":"static/js/main.9319ce1e.chunk.js","sourcesContent":["import { initializeApp } from 'firebase/app';\nimport { getFirestore } from 'firebase/firestore';\nimport {\n  getAuth,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n  onAuthStateChanged,\n  signOut,\n} from 'firebase/auth';\nimport { useState, useEffect } from 'react';\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseUrl: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n};\n\n// eslint-disable-next-line\nconst app = initializeApp(firebaseConfig);\nconst auth = getAuth();\n\nexport default getFirestore();\n\nexport function signup(email, password) {\n  //authentication handle needs to be provided as a first of arguments\n  return createUserWithEmailAndPassword(auth, email, password);\n}\n\nexport function login(email, password) {\n  //authentication handle needs to be provided as a first of arguments\n  return signInWithEmailAndPassword(auth, email, password);\n}\n\nexport function logout() {\n  return signOut(auth);\n}\n\n//custom hook\nexport function useAuth() {\n  const [currentUser, setCurrentUser] = useState();\n  useEffect(() => {\n    const unsub = onAuthStateChanged(auth, (user) => setCurrentUser(user));\n    return unsub;\n  }, []);\n  return currentUser;\n}\n","import React from 'react';\n\nexport default function FavouriteMovies({ moviesList, handleClick, listName }) {\n  const movies = moviesList.sort((a, b) =>\n    a.original_language > b.original_language ? 1 : -1\n  );\n  return (\n    <div className='movie-listing'>\n      <h5>\n        <span className='red underlined'>{listName}</span> {movies.length}\n      </h5>\n\n      {movies?.length > 0 &&\n        movies.map((movie) => (\n          <h5 key={movie.id} onClick={() => handleClick(movie)}>\n            {movie.title}\n            <span className='red'>{movie.release_date?.substring(0, 4)}</span>\n            <span className='red language'>{movie.original_language}</span>\n          </h5>\n        ))}\n    </div>\n  );\n}\n","import React from 'react';\n\nexport default function Featured({ featured, onClick, icon, type }) {\n  let classes = `fa ${icon} ${!featured && ' black'}`;\n  console.log('type: ', type);\n  return (\n    <i\n      onClick={() => onClick({ type })}\n      className={classes}\n      aria-hidden='true'\n    />\n  );\n}\n","import React, { useState } from 'react';\nimport { signup, login } from '../firebase';\nimport { Input } from '.';\n\nexport default function Form({ handleDownload, handleOpen }) {\n  const [mail, setMail] = useState('');\n  const [password, setPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState(false);\n  const [openInfo, setOpenInfo] = useState(false);\n\n  async function handleSignup() {\n    setLoading(true);\n    try {\n      await signup(mail, password);\n    } catch {\n      setError(error);\n    }\n    setLoading(false);\n    setSuccess(true);\n    handleOpen(false);\n  }\n  async function handleLogin() {\n    setLoading(true);\n    try {\n      await login(mail, password);\n    } catch {\n      setError(error);\n    }\n    setLoading(false);\n    console.log('logged in. download movies now!');\n    handleDownload();\n  }\n  return (\n    <div className='signup-form'>\n      <Input\n        placeholder='Your Mail'\n        value={mail}\n        type='email'\n        onInputChange={(e) => setMail(e)}\n      />\n      <Input\n        placeholder='Your Password'\n        value={password}\n        type='password'\n        onInputChange={(e) => setPassword(e)}\n      />\n      <p style={{ marginTop: -4 }}>\n        *your data will not be shared with anybody else.\n      </p>\n      {success || (\n        <button disabled={loading} onClick={handleSignup}>\n          signup\n        </button>\n      )}\n      <button disabled={loading} onClick={handleLogin}>\n        login\n      </button>\n\n      {error !== '' && error}\n      {success && <p>thanks for registering!</p>}\n      <h5 className='red underlined' onClick={() => setOpenInfo(!openInfo)}>\n        Do I have to sign up?\n      </h5>\n      {openInfo && (\n        <>\n          <p>\n            when you sign up you can save movies and access them from different\n            computers. <br />\n            And your list will not be deleted upon clearing browser data.\n          </p>\n          <p className='red'>\n            Hacking each others accounts and creating multiple fake accounts\n            <br /> and suggesting bad movies to watch is stronly unrecommended\n            and might RESULT INTO BANNING. NO MERCY\n          </p>\n        </>\n      )}\n    </div>\n  );\n}\n","import React from 'react';\n\nexport default function Input({\n  type,\n  placeholder,\n  value,\n  onInputChange,\n  required,\n  nameClass,\n}) {\n  return (\n    <input\n      className={nameClass}\n      placeholder={placeholder}\n      type={type ? type : 'text'}\n      value={value}\n      onChange={(e) => onInputChange(e.target.value)}\n      required={required}\n    />\n  );\n}\n","import React from 'react';\nimport { Featured, Stars } from '.';\n\nconst MovieDetails = ({ movie, handleFeatured, storedMovies }) => {\n  return (\n    <div className='film-details container'>\n      {movie ? (\n        <div>\n          <h2>\n            <span>{movie.title}</span>\n            {movie.title !== movie.original_title ? (\n              <span className='red'> {movie.original_title}</span>\n            ) : null}\n          </h2>\n          <Featured\n            onClick={handleFeatured}\n            featured={storedMovies.find((film) => film.id === movie.id)?.like}\n            icon='fa-heart'\n            type='like'\n          />\n          <Featured\n            onClick={handleFeatured}\n            featured={\n              storedMovies.find((film) => film.id === movie.id)?.suggested\n            }\n            icon='fa-lightbulb-o'\n            type='suggested'\n          />\n          {/*<Stars popularity={movie.vote_average / 2} /> */}\n          <span className='red bold'>{movie.vote_average}</span>\n          {movie.runtime && <span> {movie.runtime} min</span>}\n          <p>{movie.overview}</p>\n          <p>\n            <b>release date</b> {movie.release_date}\n            <br></br>\n            <b>original language</b> {movie.original_language}\n            <br></br>\n          </p>\n          <br />\n          <button\n            className='small'\n            onClick={() => handleFeatured({ type: 'suggested' })}\n          >\n            {storedMovies.find((film) => film.id === movie.id)?.suggested\n              ? 'UNVOTE'\n              : 'VOTE FOR THIS'}\n          </button>\n        </div>\n      ) : (\n        <p></p>\n      )}\n    </div>\n  );\n};\nexport default MovieDetails;\n","import React, { useState } from 'react';\nimport { Input, SearchResults } from './';\n\nexport default function Search({ storedMovies, handleSelectedMovie }) {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [query, setQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n\n  const API_KEY = '4cb1eeab94f45affe2536f2c684a5c9e';\n  const API_URL = 'https://api.themoviedb.org/3/';\n\n  //SEARCH FUNCTION - on query change setMovies to state object\n  async function handleSearchChange(q) {\n    setQuery(q);\n    if (q.length !== 0) {\n      setLoading(true);\n      try {\n        const response = await fetch(\n          `${API_URL}search/movie?api_key=${API_KEY}&query=${q}`\n        );\n        const json = await response.json();\n        setMovies(json.results);\n        setLoading(false);\n      } catch (error) {\n        setError('Something went wrong');\n        setLoading(false);\n      }\n    } else {\n      setError('Search needs letters');\n    }\n  }\n\n  return (\n    <>\n      <div className='container'>\n        <Input\n          nameClass='search-field'\n          placeholder='Search for a movie'\n          value={query}\n          onInputChange={(e) => handleSearchChange(e)}\n        />\n      </div>\n      <div className='underline'></div>\n      <SearchResults\n        loading={loading}\n        erorr={error}\n        query={query}\n        movies={movies}\n        storedMovies={storedMovies}\n        handleSelectedMovie={handleSelectedMovie}\n      />\n    </>\n  );\n}\n","import React from 'react';\n\nexport default function SearchResults({\n  loading,\n  error,\n  query,\n  movies,\n  storedMovies,\n  handleSelectedMovie,\n}) {\n  function isMovieHere(movieId, list) {\n    return list.some((film) => film.id === movieId);\n  }\n  return (\n    <div className='results movie-listing container'>\n      <h5>{(loading && 'Loading...') || error}</h5>\n      {query.length !== 0 && movies.length !== 0 ? (\n        movies.map((movie) => (\n          <h5 key={movie.id} onClick={() => handleSelectedMovie(movie)}>\n            {movie.title}{' '}\n            <span className='purple'>\n              {movie.release_date?.substring(0, 4)}\n            </span>\n            {isMovieHere(movie.id, storedMovies) && (\n              <i className='fa fa-star red'></i>\n            )}\n          </h5>\n        ))\n      ) : (\n        <h5>No movies found</h5>\n      )}\n    </div>\n  );\n}\n","import React from 'react';\n\nexport default function SuggestedMovies({ movies, handleClick, listName }) {\n  let results = Object.values(\n    movies.reduce((a, { id }) => {\n      a[id] = a[id] || { id, count: 0 };\n      a[id].count++;\n      return a;\n    }, {})\n  );\n\n  results.sort((a, b) => (a.count < b.count ? 1 : -1));\n\n  function getMovie(id) {\n    const film = movies.find((movie) => movie.id === id);\n    return film;\n  }\n\n  return (\n    <div\n      className='movie-listing'\n      style={{\n        backgroundColor: 'black',\n        color: 'white',\n        padding: '16px 20px',\n        marginRight: '-20px',\n      }}\n    >\n      <h5 className='purple bold' style={{ marginRight: 0 }}>\n        {listName}\n      </h5>\n\n      {movies?.length > 0 &&\n        results.map((movie) => (\n          <h5 key={movie.id} onClick={() => handleClick(getMovie(movie.id))}>\n            {getMovie(movie.id).title}\n            <span className='red'>\n              {getMovie(movie.id).release_date.substring(0, 4)}\n            </span>\n            <span className='red language'>\n              {getMovie(movie.id).original_language}\n            </span>\n            <span className='purple bolded bold'>{movie.count}</span>\n          </h5>\n        ))}\n    </div>\n  );\n}\n","export const open = () => {\n  return {\n    type: 'OPEN',\n  };\n};\n","import React from 'react';\nimport { useAuth, logout } from '../firebase';\nimport { Form } from './';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { open } from '../actions';\n\nexport default function UserForm({ saved, handleSave, handleDownload }) {\n  const currentUser = useAuth();\n  const isOpen = useSelector((state) => state.isOpen);\n  const dispatch = useDispatch();\n\n  async function handleLogout() {\n    try {\n      await logout();\n    } catch {\n      console.log('something went wrong');\n    }\n    dispatch(open());\n  }\n  return (\n    <div className={`user-greet ${isOpen && 'open'}`}>\n      <div className='form-head container flex'>\n        <div>\n          {currentUser && (\n            <>\n              <p style={{ marginTop: 0 }}>\n                hi {currentUser?.email.split('@')[0]}\n              </p>\n              <p className='red underlined' onClick={handleLogout}>\n                logout\n              </p>\n            </>\n          )}\n        </div>\n        {currentUser && (\n          <button className={`small ${saved || 'gray'}`} onClick={handleSave}>\n            {saved ? 'saved' : 'save'}\n          </button>\n        )}\n        {!currentUser && !isOpen && (\n          <>\n            <button className={`small`} onClick={() => dispatch(open())}>\n              LOGIN\n            </button>\n            <button className={`small`} onClick={() => dispatch(open())}>\n              SIGNUP\n            </button>\n          </>\n        )}\n\n        {isOpen && (\n          <div className='line-container' onClick={() => dispatch(open())}>\n            <div className='line first'></div>\n            <div className='line'></div>\n          </div>\n        )}\n      </div>\n\n      {open && (\n        <Form\n          handleDownload={handleDownload}\n          handleOpen={() => dispatch(open())}\n        />\n      )}\n    </div>\n  );\n}\n","const isOpen = (state = false, action) => {\n  switch (action.type) {\n    case 'OPEN':\n      return !state;\n    default:\n      return state;\n  }\n};\nexport default isOpen;\n","const isLoading = (state = false, action) => {\n  switch (action.type) {\n    case 'LOADING':\n      return !state;\n    default:\n      return state;\n  }\n};\nexport default isLoading;\n","import isOpen from './isOpen';\nimport isLoading from './isLoading';\nimport { combineReducers } from 'redux';\n\nconst allReducers = combineReducers({\n  isOpen,\n  isLoading,\n});\n\nexport default allReducers;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './components';\nimport 'font-awesome/css/font-awesome.css';\nimport { createStore } from 'redux';\nimport allReducers from './reducers';\nimport { Provider } from 'react-redux';\n\nconst store = createStore(\n  allReducers,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n","import React, { useState, useEffect } from 'react';\nimport {\n  FavouriteMovies,\n  MovieDetails,\n  Search,\n  SuggestedMovies,\n  UserForm,\n} from './';\nimport { useAuth } from '../firebase';\nimport db from '../firebase';\nimport { setDoc, doc, onSnapshot, collection } from 'firebase/firestore';\n\nimport '../style.scss';\n\nexport default function App() {\n  const [selectedMovie, setSelectedMovie] = useState(null);\n  const [storedMovies, setStoredMovies] = useState([]);\n  const [saved, setSaved] = useState(false);\n  const currentUser = useAuth();\n  const [download, setDownload] = useState(false);\n  const [allSuggested, setAllSuggested] = useState([]);\n\n  const removeIncomplete = (array) => {\n    const newArray = array.filter((item) => item !== null && 'id' in item);\n    return newArray;\n  };\n\n  // first get items from local storage - if exist.\n  // then : if user is signed in AND database has a movie entry with users uid - set the filmLists\n  // ADD those to the movie lisst\n  useEffect(() => {\n    // first get items from local storage - if exist.\n    console.log('useEffect run');\n    /*\n    if (localStorage.getItem('films') !== null) {\n      let moviesFromStorage = JSON.parse(localStorage.getItem('films'));\n      setStoredMovies(removeIncomplete(moviesFromStorage));\n    }\n    */\n\n    const unsubscribe = onSnapshot(collection(db, 'users'), (snapshot) => {\n      // here collect all the suggested movies and store them in suggested items in one level array.\n      console.log(snapshot.docs);\n\n      let suggestedItems = [];\n      const allUsersData = snapshot.docs.map((doc) => {\n        const array = JSON.parse(doc.data().movies);\n        console.log(JSON.parse(doc.data().movies));\n        if (array !== []) {\n          array.filter((item) => {\n            item.suggested && suggestedItems.push(item);\n          });\n        }\n      });\n      console.log('alluser', allUsersData);\n      // let suggestedItems = [];\n\n      setAllSuggested(suggestedItems);\n      console.log(suggestedItems);\n\n      // user is signed:\n      if (currentUser) {\n        const user = snapshot.docs.filter((doc) => doc.id === currentUser.uid);\n        // user has no data in db, yet - save the local storage data.\n        if (user[0] === undefined) {\n          createUserDb();\n          async function createUserDb() {\n            const docRef = doc(db, 'users', currentUser.uid);\n            const payload = { movies: localStorage.getItem('films') };\n            await setDoc(docRef, payload);\n          }\n          setSaved(true);\n          // else take the users movies from its db and set them to storedMovies\n        } else {\n          const moviesFromDb = JSON.parse(user[0].data().movies);\n          if (moviesFromDb !== null) {\n            setStoredMovies(removeIncomplete(moviesFromDb));\n          }\n          //let result = _.unionBy(storedMovies, moviesFromDb, 'id');\n          //setStoredMovies(removeIncomplete(result));\n        }\n      }\n    });\n    return unsubscribe;\n  }, [download, currentUser]);\n\n  function updateStoredMovies(m) {\n    // here I copy the list of liked and suggested movies WITHOUT the incoming movie\n    const moviesWithoutSelected = storedMovies.filter(\n      (film) => film.id !== m.id\n    );\n    let updatedMovies = storedMovies;\n    //the movie IS in the list\n    if (isMovieHere(m.id, storedMovies)) {\n      //remove it from the list ONLY if the movie has all features set to none\n      if (m.like === undefined) {\n        if (m.suggested === undefined) {\n          updatedMovies = [...moviesWithoutSelected];\n        } else {\n          updatedMovies = [...moviesWithoutSelected, m];\n        }\n      } else {\n        //otherwise update the list\n        updatedMovies = [...moviesWithoutSelected, m];\n      }\n    } else {\n      //if not here - add to the list\n      updatedMovies = [...storedMovies, m];\n    }\n    return updatedMovies;\n  }\n\n  const simplifyMovie = (movie) => {\n    const simplifiedMovie = [\n      'title',\n      'id',\n      'seen',\n      'like',\n      'suggested',\n      'original_title',\n      'release_date',\n      'original_language',\n      'vote_average',\n      'overview',\n    ].reduce((newObj, key) => {\n      movie[key] !== undefined && (newObj[key] = movie[key]);\n      return newObj;\n    }, {});\n    return simplifiedMovie;\n  };\n\n  function saveMovies(movies) {\n    console.log('saving movies to local storage');\n    localStorage.setItem('films', JSON.stringify(movies));\n    setStoredMovies(movies);\n  }\n\n  //only save to storage onclick.\n  async function saveMoviesToDb(movies) {\n    // if logged in, sent to db\n    console.log('saving movies to online db');\n    if (currentUser === undefined || currentUser === null) {\n      setSaved(false);\n    } else {\n      const docRef = doc(db, 'users', currentUser.uid);\n      const payload = { movies: JSON.stringify(movies) };\n      await setDoc(docRef, payload);\n      setSaved(true);\n    }\n  }\n\n  // on feature icon click update the selected movie. then stored Movies\n  function onFeatureChange(movie, feature) {\n    console.log('featured changed', feature);\n    const fState = movie[feature] === true ? undefined : true;\n    console.log('feature state', fState);\n    const updatedMovie = { ...movie, [feature]: fState };\n    console.log(\n      'updated movie like: ',\n      updatedMovie.like,\n      updatedMovie.suggested\n    );\n    const simplified = simplifyMovie(updatedMovie);\n    setSelectedMovie(simplified);\n    console.log(\n      'simplified movie like: ',\n      simplified.like,\n      simplified.suggested\n    );\n    //on the feature change, update stored movies\n    const updatedMovies = updateStoredMovies(simplified);\n    console.log(simplified);\n    console.log(updatedMovies);\n    saveMovies(updatedMovies);\n    setSaved(false);\n  }\n\n  function isMovieHere(movieId, list) {\n    return list.some((film) => film.id === movieId);\n  }\n\n  return (\n    <div className='search'>\n      <Search\n        storedMovies={storedMovies}\n        handleSelectedMovie={(m) => setSelectedMovie(m)}\n      />\n      <UserForm\n        saved={saved}\n        handleSave={() => saveMoviesToDb(storedMovies)}\n        handleDownload={() => setDownload(!download)}\n      />\n      {selectedMovie && (\n        <MovieDetails\n          movie={selectedMovie}\n          handleFeatured={(type) => onFeatureChange(selectedMovie, type.type)}\n          storedMovies={storedMovies}\n        />\n      )}\n      <div className='favourite-movies container'>\n        {currentUser && (\n          <FavouriteMovies\n            listName='your liked movies'\n            moviesList={storedMovies.filter((movie) => movie.like)}\n            handleClick={setSelectedMovie}\n          />\n        )}\n        {currentUser && (\n          <FavouriteMovies\n            listName='your suggested movies'\n            moviesList={storedMovies.filter((movie) => movie.suggested)}\n            handleClick={setSelectedMovie}\n          />\n        )}\n        <SuggestedMovies\n          listName='suggested by all'\n          movies={allSuggested}\n          handleClick={setSelectedMovie}\n        />\n      </div>\n    </div>\n  );\n}\n"],"sourceRoot":""}